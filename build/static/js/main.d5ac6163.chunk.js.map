{"version":3,"sources":["components/Input.js","action/index.js","components/TodoEditable.js","components/TodoList.js","reducers/initialState.js","store.js","reducers/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","cards","padding","margin","insideMargin","hover","backgroundColor","Input","input","React","createRef","classes","dispatch","useDispatch","handleSubmit","e","preventDefault","current","value","console","log","type","todo","Card","elevation","className","onSubmit","TextField","variant","label","color","inputRef","Button","startIcon","onClick","useStyle","isDone","textDecorationLine","TodoEditable","index","deleteTodo","toggle","editTodo","useState","edit","setEdit","content","text","style","width","fullWidth","onChange","defaultValue","ListItemText","ListItemSecondaryAction","IconButton","Delete","Edit","cursor","TodoList","todos","useSelector","state","id","removeTodo","toggleTodo","List","map","item","ListItem","divider","initialState","store","createStore","action","filter","window","__REDUX_DEVTOOLS_EXTENSION__","App","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5ac6163.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { addTodo } from \"../action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  cards: {\r\n    padding: 10,\r\n    margin: 10,\r\n  },\r\n  insideMargin: {\r\n    margin: 10,\r\n  },\r\n  hover: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#ddd\",\r\n    },\r\n  },\r\n});\r\nexport default function Input() {\r\n  const input = React.createRef();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (input.current.value < 3) {\r\n      console.log(\"error\"); // todo, show error message\r\n      return;\r\n    } else {\r\n      dispatch(addTodo(input.current.value));\r\n      input.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card elevation={10} className={classes.cards}>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"What to do\"\r\n          color=\"primary\"\r\n          inputRef={input}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<SaveIcon />}\r\n          className={classes.insideMargin}\r\n          onClick={handleSubmit}\r\n        >\r\n          Add\r\n        </Button>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\n","export const addTodo = (todo) => ({\r\n  type: \"ADD_TODO\",\r\n  todo,\r\n});\r\nexport const removeTodo = (id) => ({\r\n  type: \"REMOVE_TODO\",\r\n  id,\r\n});\r\nexport const toggleTodo = (id) => ({\r\n  type: \"TOGGLE_TODO\",\r\n  id,\r\n});\r\nexport const editTodo = (id, content) => ({\r\n  type: \"EDIT_TODO\",\r\n  id,\r\n  content,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles({\r\n  isDone: {\r\n    textDecorationLine: \"line-through\",\r\n    color: \"#aaa\",\r\n  },\r\n});\r\n\r\nconst TodoEditable = ({ todo, index, deleteTodo, toggle, editTodo }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const input = React.createRef();\r\n  const classes = useStyle();\r\n\r\n  let content = todo.text;\r\n\r\n  const handleChange = () => {\r\n    content = input.current.value;\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    setEdit(false);\r\n    return editTodo(index, content);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"80%\" }}>\r\n      {edit ? (\r\n        <form onSubmit={submit}>\r\n          <TextField\r\n            inputRef={input}\r\n            label=\"Edit\"\r\n            variant=\"filled\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            defaultValue={content}\r\n          ></TextField>\r\n          <button type=\"submit\">Save</button>\r\n          <button onClick={() => setEdit(false)}>Abort</button>\r\n        </form>\r\n      ) : (\r\n        <>\r\n          <ListItemText\r\n            onClick={() => toggle(index)}\r\n            className={todo.isDone ? classes.isDone : null}\r\n          >\r\n            {todo.text}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton onClick={() => deleteTodo(index)}>\r\n              <Delete color=\"secondary\" />\r\n            </IconButton>\r\n            <IconButton onClick={() => setEdit(!edit)}>\r\n              <Edit color=\"primary\" />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoEditable;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, Card } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeTodo, toggleTodo, editTodo } from \"../action\";\r\n\r\nimport TodoEditable from \"./TodoEditable\";\r\n\r\nconst useStyles = makeStyles({\r\n  cards: {\r\n    padding: 10,\r\n    margin: 10,\r\n  },\r\n  hover: {\r\n    padding: 15,\r\n    \"&:hover\": {\r\n      backgroundColor: \"#ddd\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function TodoList() {\r\n  const classes = useStyles();\r\n  const todos = useSelector((state) => state.todos);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteTodo = (id) => {\r\n    dispatch(removeTodo(id));\r\n  };\r\n  const toggle = (id) => {\r\n    dispatch(toggleTodo(id));\r\n  };\r\n  const edit = (id, content) => {\r\n    dispatch(editTodo(id, content));\r\n  };\r\n\r\n  return (\r\n    <Card elevation={10} className={classes.cards}>\r\n      <List>\r\n        {todos &&\r\n          todos.map((item, index) => {\r\n            return (\r\n              <ListItem divider key={`todo-${index}`} className={classes.hover}>\r\n                <TodoEditable\r\n                  todo={item}\r\n                  index={index}\r\n                  deleteTodo={deleteTodo}\r\n                  toggle={toggle}\r\n                  editTodo={edit}\r\n                />\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n","export const initialState = {\r\n  todos: [\r\n    {\r\n      text:\r\n        \"To start exploring Material Components and Theming without setting up an environment, remix one of the Material Starter Kits on Glitch.\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      text:\r\n        \"URL własnego kursora. Może być podany więcej niż jeden w wypadku, kiedy niektóre typy obrazów nie są obsługiwane. Pozostałe adresy URL muszą być podane jako ostatnie. Zobacz Użycie wartości URL dla własności cursor po więcej informacji.\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      text:\r\n        \"In the following example, we demonstrate how to use react-window with the List component. It renders 200 rows and can easily handle more. Virtualization helps with performance issues.\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      text: \"lorem ipsum\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      text: \"bla bla bla lorem ipsum\",\r\n      isDone: false,\r\n    },\r\n  ],\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { todosReducer } from \"./reducers/Todos\";\r\n\r\nexport const store = createStore(\r\n  todosReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import { initialState } from \"./initialState\";\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: [{ text: action.todo, isDone: false }, ...state.todos],\r\n      };\r\n    case \"REMOVE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((item, index) => index !== action.id),\r\n      };\r\n    case \"TOGGLE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((item, index) =>\r\n          action.id === index ? { ...item, isDone: !item.isDone } : item\r\n        ),\r\n      };\r\n    case \"EDIT_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((item, index) =>\r\n          action.id === index ? { ...item, text: action.content } : item\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import \"./App.css\";\nimport Input from \"./components/Input\";\nimport TodoList from \"./components/TodoList\";\nimport Container from \"@material-ui/core/Container\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Redux todolist\n          <Container maxWidth=\"sm\">\n            <Input />\n            <TodoList />\n          </Container>\n        </header>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}